[{"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\index.js":"1","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\App.js":"2","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\navigator.js":"3","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\index.js":"4","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\About\\index.js":"5","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\Header\\index.js":"6","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\AuthDialog\\index.js":"7","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\firebase.js":"8","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\index.js":"9","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\components\\Note\\index.js":"10","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Editor\\index.js":"11","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\EditorPlaceholder\\index.js":"12"},{"size":219,"mtime":1612512823284,"results":"13","hashOfConfig":"14"},{"size":258,"mtime":1612516716375,"results":"15","hashOfConfig":"14"},{"size":483,"mtime":1612727433635,"results":"16","hashOfConfig":"14"},{"size":1323,"mtime":1612878118339,"results":"17","hashOfConfig":"14"},{"size":123,"mtime":1612514832496,"results":"18","hashOfConfig":"14"},{"size":1561,"mtime":1612548724188,"results":"19","hashOfConfig":"14"},{"size":3140,"mtime":1612953556932,"results":"20","hashOfConfig":"14"},{"size":549,"mtime":1612548771299,"results":"21","hashOfConfig":"14"},{"size":2729,"mtime":1612952535068,"results":"22","hashOfConfig":"14"},{"size":3162,"mtime":1612952846972,"results":"23","hashOfConfig":"14"},{"size":6459,"mtime":1612952889097,"results":"24","hashOfConfig":"14"},{"size":696,"mtime":1612800325739,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"cwet02",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\index.js",[],["56","57"],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\App.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\navigator.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\index.js",["58"],"import React, { useEffect, useRef } from \"react\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Notes from \"./components/Notes\";\r\nimport Editor from \"./components/Editor\";\r\nimport EditorPlaceholder from \"./components/EditorPlaceholder\";\r\n\r\nfunction Home({ match }) {\r\n  const homepageRef = useRef();\r\n  useEffect(() => {\r\n    if (match.params.cordionID && window.innerWidth < 576)\r\n      homepageRef.current.style.gridTemplateColumns = \"0 1fr\";\r\n    else homepageRef.current.style.gridTemplateColumns = \"1fr 0\";\r\n\r\n    if (window.innerWidth > 576)\r\n      homepageRef.current.style.gridTemplateColumns =\r\n        \"350px calc(100% - 350px)\";\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      if (window.innerWidth > 576)\r\n        homepageRef.current.style.gridTemplateColumns =\r\n          \"350px calc(100% - 350px)\";\r\n      else if (match.params.cordionID && window.innerWidth < 576)\r\n        homepageRef.current.style.gridTemplateColumns = \"0 1fr\";\r\n      else homepageRef.current.style.gridTemplateColumns = \"1fr 0\";\r\n    });\r\n  }, [window.location.href]);\r\n\r\n  return (\r\n    <div ref={homepageRef} className=\"home-page\">\r\n      <Notes />\r\n      <Route exact path=\"/\" component={EditorPlaceholder} />\r\n      <Route exact path=\"/:cordionID\" component={Editor} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\About\\index.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\Header\\index.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\AuthDialog\\index.js",["59"],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\firebase.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\index.js",["60"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport { AddRounded, Search } from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../firebase\";\r\n\r\nimport Note from \"./components/Note\";\r\n\r\nfunction Notes() {\r\n  const history = useHistory();\r\n  const [uid, setUID] = useState(\"\"),\r\n    [notes, setNotes] = useState([]),\r\n    [searchText, setSearchText] = useState(\"\"),\r\n    [showAddBtn, setShowAddBtn] = useState(true);\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((currentUser) => {\r\n      setUID(currentUser.uid);\r\n      db.child(currentUser.uid).on(\"child_added\", (snap) => {\r\n        setNotes((prevNotes) => [...prevNotes, snap.key]);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (history.location.pathname.substring(1) && window.innerWidth < 576)\r\n      setShowAddBtn(false);\r\n    else setShowAddBtn(true);\r\n  }, [window.location.href, window.innerWidth]);\r\n\r\n  const date = new Date();\r\n  let month = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let lastEdited = `${date.getHours() < 10 ? \"0\" : \"\"}${date.getHours()}:${\r\n    date.getMinutes() < 10 ? \"0\" : \"\"\r\n  }${date.getMinutes()}, ${date.getDate()} ${\r\n    month[date.getMonth()]\r\n  } ${date.getFullYear()}`;\r\n\r\n  const createNewNote = () => {\r\n    db.child(uid)\r\n      .push()\r\n      .then((snap) => {\r\n        db.child(uid).child(snap.key).set({\r\n          title: \"Untitled\",\r\n          editorData: \"\",\r\n          lastEdited: lastEdited,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Notes\">\r\n      <div className=\"body\">\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Search\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n          />\r\n          <Search className=\"search-icon\" />\r\n        </div>\r\n        <div className=\"notes-list\">\r\n          {notes.map((note) => (\r\n            <Note path={`/${note}`} key={note} searchFilter={searchText} />\r\n          ))}\r\n          {notes.length === 0 && (\r\n            <div className=\"no-notes\">\r\n              Looks like you don't have any notes, simply press on the add\r\n              button to create a new file!\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"add-btn\"\r\n        onClick={createNewNote}\r\n        style={{ display: showAddBtn ? \"inline-flex\" : \"none\" }}\r\n      >\r\n        <AddRounded className=\"icon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\components\\Note\\index.js",["61","62"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../../../firebase\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n// import \"sweetalert2/src/sweetalert2.scss\";\r\n\r\nfunction Note({ path, searchFilter }) {\r\n  const [uid, setUID] = useState(\"\"),\r\n    [selected, setSelected] = useState(false),\r\n    [title, setTitle] = useState(\"\"),\r\n    [lastEdited, setLastEdited] = useState(\"\"),\r\n    [show, setShow] = useState(true),\r\n    [deleted, setDeleted] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const deleteNote = () => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      // icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#000\",\r\n      cancelButtonColor: \"#fff\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n\r\n        db.child(uid).child(path.substring(1)).set(null);\r\n        history.replace(\"/\");\r\n        setDeleted(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.location.pathname === path) setSelected(true);\r\n    else setSelected(false);\r\n\r\n    history.listen((loc) => {\r\n      if (loc.pathname === path) setSelected(true);\r\n      else setSelected(false);\r\n    });\r\n\r\n    return auth.onAuthStateChanged((currentUser) => {\r\n      db.child(currentUser.uid)\r\n        .child(path.substring(1))\r\n        .on(\"value\", (snap) => {\r\n          setUID(currentUser.uid);\r\n          if (snap?.val()?.title) setTitle(snap.val().title);\r\n          if (snap?.val()?.lastEdited) setLastEdited(snap.val().lastEdited);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(\r\n    //   searchFilter,\r\n    //   title.toLowerCase().includes(searchFilter.toLowerCase())\r\n    // );\r\n    setShow(title.toLowerCase().includes(searchFilter.toLowerCase()));\r\n  }, [searchFilter]);\r\n\r\n  return (\r\n    <div>\r\n      {selected ? (\r\n        <div\r\n          className={selected ? \"Note selected\" : \"Note\"}\r\n          style={{ display: show && !deleted ? \"grid\" : \"none\" }}\r\n        >\r\n          <div className=\"note-info\">\r\n            <div className=\"note-title\">{title}</div>\r\n            <div className=\"note-lastEdited\">Last Edited: {lastEdited}</div>\r\n          </div>\r\n          <div className=\"icon\" onClick={deleteNote}>\r\n            <Delete />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Link to={path}>\r\n          <div\r\n            className={selected ? \"Note selected\" : \"Note\"}\r\n            style={{ display: show && !deleted ? \"grid\" : \"none\" }}\r\n          >\r\n            <div className=\"note-info\">\r\n              <div className=\"note-title\">{title}</div>\r\n              <div className=\"note-lastEdited\">Last Edited: {lastEdited}</div>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <Delete />\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Editor\\index.js",["63","64"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport {\r\n  Editor as NoteEditor,\r\n  EditorState,\r\n  RichUtils,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n} from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\n\r\nimport { IconButton, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport {\r\n  FormatBoldRounded,\r\n  FormatUnderlinedRounded,\r\n  FormatItalicRounded,\r\n  StrikethroughS,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../firebase\";\r\n\r\nfunction Editor({ match }) {\r\n  //Setting up firebase\r\n  const [title, setTitle] = useState(\"Loading...\");\r\n\r\n  // Setting up editor\r\n  const styleMap = {\r\n    CODE: {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n      fontFamily: \"monospace\",\r\n      borderRadius: 4,\r\n    },\r\n    STRIKE: {\r\n      textDecoration: \"line-through\",\r\n    },\r\n  };\r\n\r\n  const [editorState, setEditorState] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTitle(\"Loading...\");\r\n    setEditorState(() => EditorState.createEmpty());\r\n    return auth.onAuthStateChanged((currentUser) => {\r\n      db.child(currentUser.uid)\r\n        .child(match.params.cordionID)\r\n        .once(\"value\")\r\n        .then((snap) => {\r\n          if (snap?.val()?.title) {\r\n            setTitle(snap.val().title);\r\n            document.title = `Cordion - ${snap.val().title}`;\r\n          }\r\n          if (snap?.val()?.editorData)\r\n            setEditorState(\r\n              EditorState.createWithContent(\r\n                convertFromRaw(JSON.parse(snap.val().editorData))\r\n              )\r\n            );\r\n        });\r\n    });\r\n  }, [window.location.href]);\r\n\r\n  useEffect(() => {\r\n    // localStorage.setItem(\r\n    //   \"editorData\",\r\n    //   JSON.stringify(convertToRaw(editorState.getCurrentContent()))\r\n    // );\r\n    if (title.trim() === \"\") setTitle(\"Untitled\");\r\n\r\n    const date = new Date();\r\n    let month = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    let lastEdited = `${date.getHours() < 10 ? \"0\" : \"\"}${date.getHours()}:${\r\n      date.getMinutes() < 10 ? \"0\" : \"\"\r\n    }${date.getMinutes()}, ${date.getDate()} ${\r\n      month[date.getMonth()]\r\n    } ${date.getFullYear()}`;\r\n\r\n    if (auth?.currentUser && title !== \"Loading...\")\r\n      db.child(auth.currentUser.uid)\r\n        .child(match.params.cordionID)\r\n        .set({\r\n          title: title,\r\n          editorData: JSON.stringify(\r\n            convertToRaw(editorState.getCurrentContent())\r\n          ),\r\n          lastEdited: lastEdited,\r\n        });\r\n  }, [title, editorState]);\r\n\r\n  const handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n    if (newState) {\r\n      setEditorState(newState);\r\n      return \"handled\";\r\n    }\r\n\r\n    return \"not-handled\";\r\n  };\r\n\r\n  const onCodeClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"CODE\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onBoldClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"BOLD\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onItalicClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"ITALIC\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onUnderlineClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"UNDERLINE\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onStrikeClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"STRIKE\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onHeaderClick = (e, num) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(editorState, `header-${num}`);\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onBlockQuoteClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(editorState, \"blockquote\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onOLClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(\r\n      editorState,\r\n      \"ordered-list-item\"\r\n    );\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onULClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(\r\n      editorState,\r\n      \"unordered-list-item\"\r\n    );\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onCodeBlockClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(editorState, \"code-block\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Editor\">\r\n      <div className=\"editor-title\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-title\"\r\n          placeholder=\"Title Here\"\r\n          value={title}\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"editor-edit-btns\">\r\n        <ButtonGroup>\r\n          <Button onMouseDown={(e) => onHeaderClick(e, \"one\")}>H1</Button>\r\n          <Button onMouseDown={(e) => onHeaderClick(e, \"two\")}>H2</Button>\r\n          <Button onMouseDown={(e) => onHeaderClick(e, \"three\")}>H3</Button>\r\n        </ButtonGroup>\r\n        <IconButton onMouseDown={onBoldClick}>\r\n          <FormatBoldRounded />\r\n        </IconButton>\r\n        <IconButton onMouseDown={onItalicClick}>\r\n          <FormatItalicRounded />\r\n        </IconButton>\r\n        <IconButton onMouseDown={onUnderlineClick}>\r\n          <FormatUnderlinedRounded />\r\n        </IconButton>\r\n        <IconButton onMouseDown={onStrikeClick}>\r\n          <StrikethroughS />\r\n        </IconButton>\r\n        <Button onMouseDown={onCodeClick}>Monospace</Button>\r\n        <Button onMouseDown={onBlockQuoteClick}>Blockquote</Button>\r\n        <Button onMouseDown={onULClick}>UL</Button>\r\n        <Button onMouseDown={onOLClick}>OL</Button>\r\n        <Button onMouseDown={onCodeBlockClick}>Code Block</Button>\r\n      </div>\r\n      <div className=\"editor\">\r\n        <NoteEditor\r\n          editorState={editorState}\r\n          onChange={setEditorState}\r\n          handleKeyCommand={handleKeyCommand}\r\n          customStyleMap={styleMap}\r\n          placeholder=\"Type your notes in here...\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\EditorPlaceholder\\index.js",["65"],"import React, { useEffect } from \"react\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport CordionLogo from \"../../../../assets/branding/cordion-logo.png\";\r\n\r\nfunction EditorPlaceholder() {\r\n  useEffect(() => {\r\n    document.title = \"Cordion\";\r\n  }, [window.location.href]);\r\n\r\n  return (\r\n    <div className=\"editor-placeholder\">\r\n      <img src={CordionLogo} alt=\"cordion logo\" className=\"cordion-logo\" />\r\n      <div className=\"description\">\r\n        Write and Edit your notes and access them from any device. <br />\r\n        <br /> Press the + button to create a new file or tap on one of your\r\n        files on the left side.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorPlaceholder;\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":28,"column":6,"nodeType":"72","endLine":28,"endColumn":28,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":54,"column":6,"nodeType":"72","endLine":54,"endColumn":8,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"76","line":31,"column":6,"nodeType":"72","endLine":31,"endColumn":47,"suggestions":"77"},{"ruleId":"70","severity":1,"message":"78","line":60,"column":6,"nodeType":"72","endLine":60,"endColumn":8,"suggestions":"79"},{"ruleId":"70","severity":1,"message":"80","line":68,"column":6,"nodeType":"72","endLine":68,"endColumn":20,"suggestions":"81"},{"ruleId":"70","severity":1,"message":"71","line":64,"column":6,"nodeType":"72","endLine":64,"endColumn":28,"suggestions":"82"},{"ruleId":"70","severity":1,"message":"83","line":104,"column":6,"nodeType":"72","endLine":104,"endColumn":26,"suggestions":"84"},{"ruleId":"70","severity":1,"message":"85","line":10,"column":6,"nodeType":"72","endLine":10,"endColumn":28,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.cordionID'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'setShowAuthDialog'. Either include it or remove the dependency array. If 'setShowAuthDialog' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["90"],"React Hook useEffect has a missing dependency: 'history.location.pathname'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["91"],"React Hook useEffect has missing dependencies: 'history' and 'path'. Either include them or remove the dependency array.",["92"],"React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShow' needs the current value of 'title'.",["93"],["94"],"React Hook useEffect has a missing dependency: 'match.params.cordionID'. Either include it or remove the dependency array.",["95"],"React Hook useEffect has an unnecessary dependency: 'window.location.href'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"97","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [match.params.cordionID]",{"range":"112","text":"113"},"Update the dependencies array to be: [setShowAuthDialog]",{"range":"114","text":"115"},"Update the dependencies array to be: [history.location.pathname]",{"range":"116","text":"117"},"Update the dependencies array to be: [history, path]",{"range":"118","text":"119"},"Update the dependencies array to be: [searchFilter, title]",{"range":"120","text":"121"},{"range":"122","text":"113"},"Update the dependencies array to be: [title, editorState, match.params.cordionID]",{"range":"123","text":"124"},"Update the dependencies array to be: []",{"range":"125","text":"126"},[1047,1069],"[match.params.cordionID]",[1486,1488],"[setShowAuthDialog]",[937,978],"[history.location.pathname]",[1847,1849],"[history, path]",[2076,2090],"[searchFilter, title]",[1624,1646],[2659,2679],"[title, editorState, match.params.cordionID]",[242,264],"[]"]