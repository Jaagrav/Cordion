[{"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\index.js":"1","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\App.js":"2","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\navigator.js":"3","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\index.js":"4","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\About\\index.js":"5","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\Header\\index.js":"6","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\AuthDialog\\index.js":"7","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\firebase.js":"8","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\index.js":"9","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\components\\Note\\index.js":"10","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Editor\\index.js":"11","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\EditorPlaceholder\\index.js":"12","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\NoteViewer\\index.js":"13"},{"size":219,"mtime":1612512823284,"results":"14","hashOfConfig":"15"},{"size":258,"mtime":1612516716375,"results":"16","hashOfConfig":"15"},{"size":607,"mtime":1613037645565,"results":"17","hashOfConfig":"15"},{"size":1496,"mtime":1613035360048,"results":"18","hashOfConfig":"15"},{"size":123,"mtime":1612514832496,"results":"19","hashOfConfig":"15"},{"size":1561,"mtime":1612548724188,"results":"20","hashOfConfig":"15"},{"size":3061,"mtime":1613044073102,"results":"21","hashOfConfig":"15"},{"size":553,"mtime":1612961393094,"results":"22","hashOfConfig":"15"},{"size":3080,"mtime":1612956835748,"results":"23","hashOfConfig":"15"},{"size":3162,"mtime":1612952846972,"results":"24","hashOfConfig":"15"},{"size":8167,"mtime":1613044070736,"results":"25","hashOfConfig":"15"},{"size":696,"mtime":1612800325739,"results":"26","hashOfConfig":"15"},{"size":3838,"mtime":1613043889301,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"cwet02",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\index.js",[],["61","62"],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\App.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\navigator.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\index.js",["63"],"import React, { useEffect, useRef } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Notes from \"./components/Notes\";\r\nimport Editor from \"./components/Editor\";\r\nimport EditorPlaceholder from \"./components/EditorPlaceholder\";\r\nimport NoteViewer from \"./components/NoteViewer\";\r\n\r\nfunction Home({ match }) {\r\n  const homepageRef = useRef();\r\n  useEffect(() => {\r\n    if (match.params.cordionID && window.innerWidth < 576)\r\n      homepageRef.current.style.gridTemplateColumns = \"0 1fr\";\r\n    else homepageRef.current.style.gridTemplateColumns = \"1fr 0\";\r\n\r\n    if (window.innerWidth > 576)\r\n      homepageRef.current.style.gridTemplateColumns =\r\n        \"350px calc(100% - 350px)\";\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      if (window.innerWidth > 576)\r\n        homepageRef.current.style.gridTemplateColumns =\r\n          \"350px calc(100% - 350px)\";\r\n      else if (match.params.cordionID && window.innerWidth < 576)\r\n        homepageRef.current.style.gridTemplateColumns = \"0 1fr\";\r\n      else homepageRef.current.style.gridTemplateColumns = \"1fr 0\";\r\n    });\r\n  }, [window.location.href]);\r\n\r\n  return (\r\n    <div ref={homepageRef} className=\"home-page\">\r\n      <Notes />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={EditorPlaceholder} />\r\n        <Route exact path=\"/view/:uid/:cordionID\" component={NoteViewer} />\r\n        <Route exact path=\"/:cordionID\" component={Editor} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\About\\index.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\Header\\index.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\AuthDialog\\index.js",["64"],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\firebase.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\index.js",["65"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport { AddRounded, Search } from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../firebase\";\r\n\r\nimport Note from \"./components/Note\";\r\nimport AuthDialog from \"../../../../components/AuthDialog\";\r\n\r\nfunction Notes() {\r\n  const history = useHistory();\r\n  const [uid, setUID] = useState(\"\"),\r\n    [notes, setNotes] = useState([]),\r\n    [searchText, setSearchText] = useState(\"\"),\r\n    [showAddBtn, setShowAddBtn] = useState(true),\r\n    [showAuthDialog, setShowAuthDialog] = useState(false);\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((currentUser) => {\r\n      setUID(currentUser.uid);\r\n      db.child(currentUser.uid).on(\"child_added\", (snap) => {\r\n        setNotes((prevNotes) => [...prevNotes, snap.key]);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (history.location.pathname.substring(1) && window.innerWidth < 576)\r\n      setShowAddBtn(false);\r\n    else setShowAddBtn(true);\r\n  }, [window.location.href, window.innerWidth]);\r\n\r\n  const date = new Date();\r\n  let month = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let lastEdited = `${date.getHours() < 10 ? \"0\" : \"\"}${date.getHours()}:${\r\n    date.getMinutes() < 10 ? \"0\" : \"\"\r\n  }${date.getMinutes()}, ${date.getDate()} ${\r\n    month[date.getMonth()]\r\n  } ${date.getFullYear()}`;\r\n\r\n  const createNewNote = () => {\r\n    if (uid)\r\n      db.child(uid)\r\n        .push()\r\n        .then((snap) => {\r\n          db.child(uid).child(snap.key).set({\r\n            title: \"Untitled\",\r\n            editorData: \"\",\r\n            lastEdited: lastEdited,\r\n          });\r\n        });\r\n    else setShowAuthDialog(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Notes\">\r\n        <div className=\"body\">\r\n          <div className=\"search-box\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-input\"\r\n              placeholder=\"Search\"\r\n              value={searchText}\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n            />\r\n            <Search className=\"search-icon\" />\r\n          </div>\r\n          <div className=\"notes-list\">\r\n            {notes.map((note) => (\r\n              <Note path={`/${note}`} key={note} searchFilter={searchText} />\r\n            ))}\r\n            {notes.length === 0 && (\r\n              <div className=\"no-notes\">\r\n                Looks like you don't have any notes, simply press on the add\r\n                button to create a new file!\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"add-btn\"\r\n          onClick={createNewNote}\r\n          style={{ display: showAddBtn ? \"inline-flex\" : \"none\" }}\r\n        >\r\n          <AddRounded className=\"icon\" />\r\n        </div>\r\n      </div>\r\n      <AuthDialog open={showAuthDialog} setShowAuthDialog={setShowAuthDialog} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\components\\Note\\index.js",["66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../../../firebase\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n// import \"sweetalert2/src/sweetalert2.scss\";\r\n\r\nfunction Note({ path, searchFilter }) {\r\n  const [uid, setUID] = useState(\"\"),\r\n    [selected, setSelected] = useState(false),\r\n    [title, setTitle] = useState(\"\"),\r\n    [lastEdited, setLastEdited] = useState(\"\"),\r\n    [show, setShow] = useState(true),\r\n    [deleted, setDeleted] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const deleteNote = () => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      // icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#000\",\r\n      cancelButtonColor: \"#fff\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n\r\n        db.child(uid).child(path.substring(1)).set(null);\r\n        history.replace(\"/\");\r\n        setDeleted(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.location.pathname === path) setSelected(true);\r\n    else setSelected(false);\r\n\r\n    history.listen((loc) => {\r\n      if (loc.pathname === path) setSelected(true);\r\n      else setSelected(false);\r\n    });\r\n\r\n    return auth.onAuthStateChanged((currentUser) => {\r\n      db.child(currentUser.uid)\r\n        .child(path.substring(1))\r\n        .on(\"value\", (snap) => {\r\n          setUID(currentUser.uid);\r\n          if (snap?.val()?.title) setTitle(snap.val().title);\r\n          if (snap?.val()?.lastEdited) setLastEdited(snap.val().lastEdited);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(\r\n    //   searchFilter,\r\n    //   title.toLowerCase().includes(searchFilter.toLowerCase())\r\n    // );\r\n    setShow(title.toLowerCase().includes(searchFilter.toLowerCase()));\r\n  }, [searchFilter]);\r\n\r\n  return (\r\n    <div>\r\n      {selected ? (\r\n        <div\r\n          className={selected ? \"Note selected\" : \"Note\"}\r\n          style={{ display: show && !deleted ? \"grid\" : \"none\" }}\r\n        >\r\n          <div className=\"note-info\">\r\n            <div className=\"note-title\">{title}</div>\r\n            <div className=\"note-lastEdited\">Last Edited: {lastEdited}</div>\r\n          </div>\r\n          <div className=\"icon\" onClick={deleteNote}>\r\n            <Delete />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Link to={path}>\r\n          <div\r\n            className={selected ? \"Note selected\" : \"Note\"}\r\n            style={{ display: show && !deleted ? \"grid\" : \"none\" }}\r\n          >\r\n            <div className=\"note-info\">\r\n              <div className=\"note-title\">{title}</div>\r\n              <div className=\"note-lastEdited\">Last Edited: {lastEdited}</div>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <Delete />\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Editor\\index.js",["68","69"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport {\r\n  Editor as NoteEditor,\r\n  EditorState,\r\n  RichUtils,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n} from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\n\r\nimport { IconButton, Button, ButtonGroup, Snackbar } from \"@material-ui/core\";\r\nimport { Alert as MuiAlert } from \"@material-ui/lab\";\r\nimport {\r\n  FormatBoldRounded,\r\n  FormatUnderlinedRounded,\r\n  FormatItalicRounded,\r\n  StrikethroughS,\r\n  Share,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../firebase\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Editor({ match }) {\r\n  //Setting up firebase\r\n  const [title, setTitle] = useState(\"Loading...\"),\r\n    [uid, setUID] = useState(\"\"),\r\n    [showSnackbar, setShowSnackbar] = useState(false);\r\n\r\n  const copyShareableLink = () => {\r\n    const copyTxt = document.createElement(\"input\");\r\n    copyTxt.value = `${window.location.origin}/view/${uid}/${match.params.cordionID}`;\r\n    document.body.parentNode.appendChild(copyTxt);\r\n    copyTxt.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.parentNode.removeChild(copyTxt);\r\n    setShowSnackbar(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setShowSnackbar(false);\r\n  };\r\n\r\n  // Init editor\r\n  const styleMap = {\r\n    CODE: {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n      fontFamily: \"monospace\",\r\n      borderRadius: 4,\r\n    },\r\n    STRIKE: {\r\n      textDecoration: \"line-through\",\r\n    },\r\n  };\r\n\r\n  const [editorState, setEditorState] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTitle(\"Loading...\");\r\n    setEditorState(() => EditorState.createEmpty());\r\n    return auth.onAuthStateChanged((currentUser) => {\r\n      if (currentUser?.uid) setUID(currentUser.uid);\r\n      if (currentUser)\r\n        db.child(currentUser.uid)\r\n          .child(match.params.cordionID)\r\n          .once(\"value\")\r\n          .then((snap) => {\r\n            if (snap?.val()?.title) {\r\n              setTitle(snap.val().title);\r\n            }\r\n            if (snap?.val()?.editorData)\r\n              setEditorState(\r\n                EditorState.createWithContent(\r\n                  convertFromRaw(JSON.parse(snap.val().editorData))\r\n                )\r\n              );\r\n          });\r\n      else window.open(\"/\", \"_self\");\r\n    });\r\n  }, [window.location.href]);\r\n\r\n  useEffect(() => {\r\n    // localStorage.setItem(\r\n    //   \"editorData\",\r\n    //   JSON.stringify(convertToRaw(editorState.getCurrentContent()))\r\n    // );\r\n    if (title.trim() === \"\") setTitle(\"Untitled\");\r\n\r\n    document.title = `Cordion - ${title} (Editing)`;\r\n\r\n    const date = new Date();\r\n    let month = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    let lastEdited = `${date.getHours() < 10 ? \"0\" : \"\"}${date.getHours()}:${\r\n      date.getMinutes() < 10 ? \"0\" : \"\"\r\n    }${date.getMinutes()}, ${date.getDate()} ${\r\n      month[date.getMonth()]\r\n    } ${date.getFullYear()}`;\r\n\r\n    if (auth?.currentUser && title !== \"Loading...\")\r\n      db.child(auth.currentUser.uid)\r\n        .child(match.params.cordionID)\r\n        .set({\r\n          title: title,\r\n          editorData: JSON.stringify(\r\n            convertToRaw(editorState.getCurrentContent())\r\n          ),\r\n          lastEdited: lastEdited,\r\n          user: {\r\n            displayName: auth.currentUser.displayName,\r\n            uid: auth.currentUser.uid,\r\n            photoURL: auth.currentUser.photoURL,\r\n            email: auth.currentUser.email,\r\n          },\r\n        });\r\n  }, [title, editorState]);\r\n\r\n  const handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n\r\n    if (newState) {\r\n      setEditorState(newState);\r\n      return \"handled\";\r\n    }\r\n\r\n    return \"not-handled\";\r\n  };\r\n\r\n  const onCodeClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"CODE\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onBoldClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"BOLD\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onItalicClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"ITALIC\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onUnderlineClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"UNDERLINE\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onStrikeClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleInlineStyle(editorState, \"STRIKE\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onHeaderClick = (e, num) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(editorState, `header-${num}`);\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onBlockQuoteClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(editorState, \"blockquote\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onOLClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(\r\n      editorState,\r\n      \"ordered-list-item\"\r\n    );\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onULClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(\r\n      editorState,\r\n      \"unordered-list-item\"\r\n    );\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const onCodeBlockClick = (e) => {\r\n    e.preventDefault();\r\n    const newState = RichUtils.toggleBlockType(editorState, \"code-block\");\r\n    setEditorState(newState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Editor\">\r\n        <div className=\"editor-title\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-title\"\r\n            placeholder=\"Title Here\"\r\n            value={title}\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n          />\r\n          <IconButton title=\"Copy shareable link\" onClick={copyShareableLink}>\r\n            <Share />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"editor-edit-btns\">\r\n          <ButtonGroup>\r\n            <Button onMouseDown={(e) => onHeaderClick(e, \"one\")}>H1</Button>\r\n            <Button onMouseDown={(e) => onHeaderClick(e, \"two\")}>H2</Button>\r\n            <Button onMouseDown={(e) => onHeaderClick(e, \"three\")}>H3</Button>\r\n          </ButtonGroup>\r\n          <IconButton onMouseDown={onBoldClick}>\r\n            <FormatBoldRounded />\r\n          </IconButton>\r\n          <IconButton onMouseDown={onItalicClick}>\r\n            <FormatItalicRounded />\r\n          </IconButton>\r\n          <IconButton onMouseDown={onUnderlineClick}>\r\n            <FormatUnderlinedRounded />\r\n          </IconButton>\r\n          <IconButton onMouseDown={onStrikeClick}>\r\n            <StrikethroughS />\r\n          </IconButton>\r\n          <Button onMouseDown={onCodeClick}>Monospace</Button>\r\n          <Button onMouseDown={onBlockQuoteClick}>Blockquote</Button>\r\n          <Button onMouseDown={onULClick}>UL</Button>\r\n          <Button onMouseDown={onOLClick}>OL</Button>\r\n          <Button onMouseDown={onCodeBlockClick}>Code Block</Button>\r\n        </div>\r\n        <div className=\"editor\">\r\n          <NoteEditor\r\n            editorState={editorState}\r\n            onChange={setEditorState}\r\n            handleKeyCommand={handleKeyCommand}\r\n            customStyleMap={styleMap}\r\n            placeholder=\"Type your notes in here...\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <Snackbar\r\n        open={showSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Shareable Link has been copied successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\EditorPlaceholder\\index.js",["70"],"import React, { useEffect } from \"react\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport CordionLogo from \"../../../../assets/branding/cordion-logo.png\";\r\n\r\nfunction EditorPlaceholder() {\r\n  useEffect(() => {\r\n    document.title = \"Cordion\";\r\n  }, [window.location.href]);\r\n\r\n  return (\r\n    <div className=\"editor-placeholder\">\r\n      <img src={CordionLogo} alt=\"cordion logo\" className=\"cordion-logo\" />\r\n      <div className=\"description\">\r\n        Write and Edit your notes and access them from any device. <br />\r\n        <br /> Press the + button to create a new file or tap on one of your\r\n        files on the left side.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorPlaceholder;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\NoteViewer\\index.js",["71"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style/index.css\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Editor as NoteEditor,\r\n  EditorState,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n} from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\n\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Edit } from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../firebase\";\r\nimport AuthDialog from \"../../../../components/AuthDialog\";\r\n\r\nfunction NoteViewer({ match }) {\r\n  const theirUID = match.params.uid,\r\n    cordionID = match.params.cordionID,\r\n    history = useHistory();\r\n  const [thisUser, setThisUser] = useState(\"\"),\r\n    [displayName, setDisplayName] = useState(\"\"),\r\n    [email, setEmail] = useState(\"\"),\r\n    [title, setTitle] = useState(\"\"),\r\n    [lastEdited, setLastEdited] = useState(\"\"),\r\n    [editorState, setEditorState] = useState(() => EditorState.createEmpty()),\r\n    [showAuthDialog, setShowAuthDialog] = useState(false);\r\n\r\n  const createCopy = () => {\r\n    console.log(\"Creating copy...\");\r\n    if (thisUser?.uid)\r\n      db.child(thisUser.uid)\r\n        .push({\r\n          title: title,\r\n          editorData: JSON.stringify(\r\n            convertToRaw(editorState.getCurrentContent())\r\n          ),\r\n          lastEdited: lastEdited,\r\n          user: {\r\n            displayName: thisUser.displayName,\r\n            uid: thisUser.uid,\r\n            photoURL: thisUser.photoURL,\r\n            email: thisUser.email,\r\n          },\r\n        })\r\n        .then((snap) => {\r\n          history.push(`/${snap.key}`);\r\n        });\r\n    else setShowAuthDialog(true);\r\n  };\r\n  // Live Preview\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((currentUser) => {\r\n      if (currentUser) setThisUser(currentUser);\r\n\r\n      db.child(theirUID)\r\n        .child(cordionID)\r\n        .on(\"value\", (snap) => {\r\n          if (snap?.val()?.user?.displayName)\r\n            setDisplayName(snap.val().user.displayName);\r\n          if (snap?.val()?.user?.email) setEmail(snap.val().user.email);\r\n          if (snap?.val()?.title) setTitle(snap.val().title);\r\n          if (snap?.val()?.lastEdited) setLastEdited(snap.val().lastEdited);\r\n          if (snap?.val()?.editorData)\r\n            setEditorState(\r\n              EditorState.createWithContent(\r\n                convertFromRaw(JSON.parse(snap.val().editorData))\r\n              )\r\n            );\r\n        });\r\n    });\r\n  }, [window.location.href]);\r\n\r\n  useEffect(() => {\r\n    document.title = `Cordion - ${title} (Viewing)`;\r\n  }, [title]);\r\n\r\n  // Init Editor\r\n  const styleMap = {\r\n    CODE: {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n      fontFamily: \"monospace\",\r\n      borderRadius: 4,\r\n    },\r\n    STRIKE: {\r\n      textDecoration: \"line-through\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"NoteViewer\">\r\n        <div className=\"file-title\">\r\n          <div className=\"display-title\">{title}</div>\r\n          <IconButton onClick={createCopy}>\r\n            <Edit />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"file-author-info\">\r\n          {displayName && (\r\n            <span className=\"file-author\">\r\n              Last Edited by{\" \"}\r\n              <a href={`mailto:${email}`} style={{ color: \"black\" }}>\r\n                <b>{displayName}</b>\r\n              </a>{\" \"}\r\n              at {lastEdited}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"file-editor\">\r\n          <NoteEditor\r\n            editorState={editorState}\r\n            onChange={setEditorState}\r\n            customStyleMap={styleMap}\r\n            readOnly={true}\r\n            placeholder=\"Type your notes in here...\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <AuthDialog open={showAuthDialog} setShowAuthDialog={setShowAuthDialog} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NoteViewer;\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":29,"column":6,"nodeType":"78","endLine":29,"endColumn":28,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":53,"column":6,"nodeType":"78","endLine":53,"endColumn":8,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"82","line":33,"column":6,"nodeType":"78","endLine":33,"endColumn":47,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":60,"column":6,"nodeType":"78","endLine":60,"endColumn":8,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"86","line":68,"column":6,"nodeType":"78","endLine":68,"endColumn":20,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"77","line":92,"column":6,"nodeType":"78","endLine":92,"endColumn":28,"suggestions":"88"},{"ruleId":"76","severity":1,"message":"89","line":140,"column":6,"nodeType":"78","endLine":140,"endColumn":26,"suggestions":"90"},{"ruleId":"76","severity":1,"message":"91","line":10,"column":6,"nodeType":"78","endLine":10,"endColumn":28,"suggestions":"92"},{"ruleId":"76","severity":1,"message":"93","line":75,"column":6,"nodeType":"78","endLine":75,"endColumn":28,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.cordionID'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'setShowAuthDialog'. Either include it or remove the dependency array. If 'setShowAuthDialog' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["98"],"React Hook useEffect has a missing dependency: 'history.location.pathname'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["99"],"React Hook useEffect has missing dependencies: 'history' and 'path'. Either include them or remove the dependency array.",["100"],"React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShow' needs the current value of 'title'.",["101"],["102"],"React Hook useEffect has a missing dependency: 'match.params.cordionID'. Either include it or remove the dependency array.",["103"],"React Hook useEffect has an unnecessary dependency: 'window.location.href'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["104"],"React Hook useEffect has missing dependencies: 'cordionID' and 'theirUID'. Either include them or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"106","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [match.params.cordionID]",{"range":"123","text":"124"},"Update the dependencies array to be: [setShowAuthDialog]",{"range":"125","text":"126"},"Update the dependencies array to be: [history.location.pathname]",{"range":"127","text":"128"},"Update the dependencies array to be: [history, path]",{"range":"129","text":"130"},"Update the dependencies array to be: [searchFilter, title]",{"range":"131","text":"132"},{"range":"133","text":"124"},"Update the dependencies array to be: [title, editorState, match.params.cordionID]",{"range":"134","text":"135"},"Update the dependencies array to be: []",{"range":"136","text":"137"},"Update the dependencies array to be: [cordionID, theirUID]",{"range":"138","text":"139"},[1106,1128],"[match.params.cordionID]",[1407,1409],"[setShowAuthDialog]",[1058,1099],"[history.location.pathname]",[1847,1849],"[history, path]",[2076,2090],"[searchFilter, title]",[2479,2501],[3793,3813],"[title, editorState, match.params.cordionID]",[242,264],"[]",[2422,2444],"[cordionID, theirUID]"]