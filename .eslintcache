[{"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\index.js":"1","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\App.js":"2","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\navigator.js":"3","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\index.js":"4","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\About\\index.js":"5","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\Header\\index.js":"6","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\AuthDialog\\index.js":"7","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\firebase.js":"8","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\index.js":"9","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\components\\Note\\index.js":"10","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Editor\\index.js":"11","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\EditorPlaceholder\\index.js":"12","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\NoteViewer\\index.js":"13"},{"size":219,"mtime":1612512823284,"results":"14","hashOfConfig":"15"},{"size":258,"mtime":1612516716375,"results":"16","hashOfConfig":"15"},{"size":607,"mtime":1613037645565,"results":"17","hashOfConfig":"15"},{"size":1496,"mtime":1613035360048,"results":"18","hashOfConfig":"15"},{"size":123,"mtime":1612514832496,"results":"19","hashOfConfig":"15"},{"size":1561,"mtime":1612548724188,"results":"20","hashOfConfig":"15"},{"size":3061,"mtime":1613044073102,"results":"21","hashOfConfig":"15"},{"size":553,"mtime":1612961393094,"results":"22","hashOfConfig":"15"},{"size":5004,"mtime":1613318585228,"results":"23","hashOfConfig":"15"},{"size":3837,"mtime":1613318541614,"results":"24","hashOfConfig":"15"},{"size":8824,"mtime":1613404591688,"results":"25","hashOfConfig":"15"},{"size":696,"mtime":1612800325739,"results":"26","hashOfConfig":"15"},{"size":3838,"mtime":1613043889301,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"cwet02",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\index.js",[],["61","62"],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\App.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\navigator.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\index.js",["63"],"import React, { useEffect, useRef } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Notes from \"./components/Notes\";\r\nimport Editor from \"./components/Editor\";\r\nimport EditorPlaceholder from \"./components/EditorPlaceholder\";\r\nimport NoteViewer from \"./components/NoteViewer\";\r\n\r\nfunction Home({ match }) {\r\n  const homepageRef = useRef();\r\n  useEffect(() => {\r\n    if (match.params.cordionID && window.innerWidth < 576)\r\n      homepageRef.current.style.gridTemplateColumns = \"0 1fr\";\r\n    else homepageRef.current.style.gridTemplateColumns = \"1fr 0\";\r\n\r\n    if (window.innerWidth > 576)\r\n      homepageRef.current.style.gridTemplateColumns =\r\n        \"350px calc(100% - 350px)\";\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      if (window.innerWidth > 576)\r\n        homepageRef.current.style.gridTemplateColumns =\r\n          \"350px calc(100% - 350px)\";\r\n      else if (match.params.cordionID && window.innerWidth < 576)\r\n        homepageRef.current.style.gridTemplateColumns = \"0 1fr\";\r\n      else homepageRef.current.style.gridTemplateColumns = \"1fr 0\";\r\n    });\r\n  }, [window.location.href]);\r\n\r\n  return (\r\n    <div ref={homepageRef} className=\"home-page\">\r\n      <Notes />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={EditorPlaceholder} />\r\n        <Route exact path=\"/view/:uid/:cordionID\" component={NoteViewer} />\r\n        <Route exact path=\"/:cordionID\" component={Editor} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\About\\index.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\Header\\index.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\components\\AuthDialog\\index.js",["64"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport { Backdrop, IconButton } from \"@material-ui/core\";\r\nimport { ClearRounded } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport AuthIllustration from \"../../assets/branding/auth_illustration.png\";\r\n\r\nimport { firebase, auth } from \"../../firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\nfunction AuthDialog({ open, setShowAuthDialog }) {\r\n  const classes = useStyles();\r\n  const [displayName, setDisplayName] = useState(\"\"),\r\n    [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const login = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((snap) => {\r\n        setDisplayName(snap.displayName);\r\n        setShowAuthDialog(false);\r\n      })\r\n      .catch((err) => {\r\n        //In case log in cancels\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    auth.signOut();\r\n    setShowAuthDialog(false);\r\n    window.open(\"/\", \"_self\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n        setDisplayName(user.displayName);\r\n        setShowAuthDialog(false);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Backdrop\r\n      className={classes.backdrop}\r\n      open={open}\r\n      onClick={(e) => setShowAuthDialog(false)}\r\n    >\r\n      <div className=\"AuthDialog\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"illustration\">\r\n          <img\r\n            src={AuthIllustration}\r\n            alt=\"Auth Illustration\"\r\n            className=\"auth_illustration\"\r\n          />\r\n        </div>\r\n        <div className=\"auth-info\">\r\n          <div className=\"exit-btn\">\r\n            <IconButton onClick={(e) => setShowAuthDialog(false)}>\r\n              <ClearRounded className=\"icon\" />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"info\">\r\n            {isLoggedIn ? (\r\n              <>\r\n                <div className=\"title\">Logout</div>\r\n                <div className=\"details\">\r\n                  <b>{displayName}</b> once you log out, you won't be able to\r\n                  use Cordion to create and edit your notes.\r\n                </div>\r\n                <div className=\"login-btn\" onClick={logout}>\r\n                  Log Out\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"title\">Login</div>\r\n                <div className=\"details\">\r\n                  Login to Cordion to gain access to your notes from other\r\n                  devices.\r\n                </div>\r\n                <div className=\"login-btn\" onClick={login}>\r\n                  Log In With Google\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Backdrop>\r\n  );\r\n}\r\n\r\nexport default AuthDialog;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\firebase.js",[],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\index.js",["65","66","67"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport { AddRounded, Search } from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../firebase\";\r\n\r\nimport Note from \"./components/Note\";\r\nimport AuthDialog from \"../../../../components/AuthDialog\";\r\n\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nfunction Notes() {\r\n  const history = useHistory();\r\n  const [uid, setUID] = useState(\"\"),\r\n    [notes, setNotes] = useState([]),\r\n    [searchText, setSearchText] = useState(\"\"),\r\n    [showAddBtn, setShowAddBtn] = useState(true),\r\n    [showAuthDialog, setShowAuthDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((currentUser) => {\r\n      if (currentUser?.uid) {\r\n        db.child(currentUser.uid)\r\n          .once(\"value\")\r\n          .then((userData) => {\r\n            db.child(currentUser.uid).on(\"value\", (snap) => {\r\n              let values = snap.val();\r\n              let tempArr = [];\r\n\r\n              if (values?.order) {\r\n                tempArr = [...values.order];\r\n                for (let note in values) {\r\n                  if (\r\n                    note !== \"order\" &&\r\n                    (!values.order.includes(note) || !tempArr.includes(note))\r\n                  )\r\n                    tempArr.push(note);\r\n                }\r\n                setNotes(tempArr);\r\n              }\r\n\r\n              if (!values?.order) {\r\n                for (let note in values) {\r\n                  if (note !== \"order\") tempArr.push(note);\r\n                }\r\n                setNotes(tempArr);\r\n              }\r\n            });\r\n          });\r\n        setUID(currentUser.uid);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (history.location.pathname.substring(1) && window.innerWidth < 576)\r\n      setShowAddBtn(false);\r\n    else setShowAddBtn(true);\r\n  }, [window.location.href, window.innerWidth]);\r\n\r\n  useEffect(() => {\r\n    if (uid && notes.length) {\r\n      db.child(uid).child(\"order\").set(notes);\r\n    }\r\n  }, [notes]);\r\n\r\n  const date = new Date();\r\n  let month = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let lastEdited = `${date.getHours() < 10 ? \"0\" : \"\"}${date.getHours()}:${\r\n    date.getMinutes() < 10 ? \"0\" : \"\"\r\n  }${date.getMinutes()}, ${date.getDate()} ${\r\n    month[date.getMonth()]\r\n  } ${date.getFullYear()}`;\r\n\r\n  const createNewNote = () => {\r\n    if (uid)\r\n      db.child(uid)\r\n        .push()\r\n        .then((snap) => {\r\n          db.child(uid).child(snap.key).set({\r\n            title: \"Untitled\",\r\n            editorData: \"\",\r\n            lastEdited: lastEdited,\r\n          });\r\n        });\r\n    else setShowAuthDialog(true);\r\n  };\r\n\r\n  const reorder = (e) => {\r\n    if (e.source && e.destination) {\r\n      let tempNotesArray = [...notes];\r\n      const temp = tempNotesArray[e.source.index];\r\n      tempNotesArray.splice(e.source.index, 1);\r\n      tempNotesArray.splice(e.destination.index, 0, temp);\r\n      setNotes(tempNotesArray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Notes\">\r\n        <div className=\"body\">\r\n          <div className=\"search-box\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-input\"\r\n              placeholder=\"Search\"\r\n              value={searchText}\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n            />\r\n            <Search className=\"search-icon\" />\r\n          </div>\r\n          <div className=\"notes-list\">\r\n            <DragDropContext onDragEnd={reorder}>\r\n              <Droppable droppableId=\"notes\">\r\n                {(provided) => (\r\n                  <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                    {notes.map((note, index) => (\r\n                      <Note\r\n                        path={`/${note}`}\r\n                        key={note}\r\n                        searchFilter={searchText}\r\n                        index={index}\r\n                        notes={notes}\r\n                        setNotes={setNotes}\r\n                      />\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n            {notes.length === 0 && (\r\n              <div className=\"no-notes\">\r\n                Looks like you don't have any notes, simply press on the add\r\n                button to create a new file!\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"add-btn\"\r\n          onClick={createNewNote}\r\n          style={{ display: showAddBtn ? \"inline-flex\" : \"none\" }}\r\n        >\r\n          <AddRounded className=\"icon\" />\r\n        </div>\r\n      </div>\r\n      <AuthDialog open={showAuthDialog} setShowAuthDialog={setShowAuthDialog} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Notes\\components\\Note\\index.js",["68","69","70"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../../../firebase\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nfunction Note({ path, searchFilter, index, notes, setNotes }) {\r\n  const [uid, setUID] = useState(\"\"),\r\n    [selected, setSelected] = useState(false),\r\n    [title, setTitle] = useState(\"\"),\r\n    [lastEdited, setLastEdited] = useState(\"\"),\r\n    [show, setShow] = useState(true),\r\n    [deleted, setDeleted] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const deleteNote = () => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#000\",\r\n      cancelButtonColor: \"#fff\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n\r\n        db.child(uid).child(path.substring(1)).set(null);\r\n\r\n        let tempNotesArray = [...notes];\r\n        tempNotesArray.splice(index, 1);\r\n\r\n        setNotes(tempNotesArray);\r\n\r\n        history.replace(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.location.pathname === path) setSelected(true);\r\n    else setSelected(false);\r\n\r\n    history.listen((loc) => {\r\n      if (loc.pathname === path) setSelected(true);\r\n      else setSelected(false);\r\n    });\r\n\r\n    return auth.onAuthStateChanged((currentUser) => {\r\n      db.child(currentUser.uid)\r\n        .child(path.substring(1))\r\n        .on(\"value\", (snap) => {\r\n          setUID(currentUser.uid);\r\n          if (snap?.val()?.title) setTitle(snap.val().title);\r\n          if (snap?.val()?.lastEdited) setLastEdited(snap.val().lastEdited);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setShow(title.toLowerCase().includes(searchFilter.toLowerCase()));\r\n  }, [searchFilter]);\r\n\r\n  const getItemStyle = (isDragging, draggablePropsStyle) => ({\r\n    boxShadow: isDragging ? \"0 0 14px rgba(0, 0, 0, 0.1)\" : \"none\",\r\n    ...draggablePropsStyle,\r\n  });\r\n\r\n  return (\r\n    <Draggable draggableId={path} index={index}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          style={getItemStyle(\r\n            snapshot.isDragging,\r\n            provided.draggableProps.style\r\n          )}\r\n        >\r\n          {selected ? (\r\n            <div\r\n              className={selected ? \"Note selected\" : \"Note\"}\r\n              style={{ display: show && !deleted ? \"grid\" : \"none\" }}\r\n            >\r\n              <div className=\"note-info\">\r\n                <div className=\"note-title\">{title}</div>\r\n                <div className=\"note-lastEdited\">Last Edited: {lastEdited}</div>\r\n              </div>\r\n              <div className=\"icon\" onClick={deleteNote}>\r\n                <Delete />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <Link to={path}>\r\n              <div\r\n                className={selected ? \"Note selected\" : \"Note\"}\r\n                style={{ display: show && !deleted ? \"grid\" : \"none\" }}\r\n              >\r\n                <div className=\"note-info\">\r\n                  <div className=\"note-title\">{title}</div>\r\n                  <div className=\"note-lastEdited\">\r\n                    Last Edited: {lastEdited}\r\n                  </div>\r\n                </div>\r\n                <div className=\"icon\">\r\n                  <Delete />\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\Editor\\index.js",["71","72","73","74","75"],"D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\EditorPlaceholder\\index.js",["76"],"import React, { useEffect } from \"react\";\r\n\r\nimport \"./style/index.css\";\r\n\r\nimport CordionLogo from \"../../../../assets/branding/cordion-logo.png\";\r\n\r\nfunction EditorPlaceholder() {\r\n  useEffect(() => {\r\n    document.title = \"Cordion\";\r\n  }, [window.location.href]);\r\n\r\n  return (\r\n    <div className=\"editor-placeholder\">\r\n      <img src={CordionLogo} alt=\"cordion logo\" className=\"cordion-logo\" />\r\n      <div className=\"description\">\r\n        Write and Edit your notes and access them from any device. <br />\r\n        <br /> Press the + button to create a new file or tap on one of your\r\n        files on the left side.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorPlaceholder;\r\n","D:\\Jaagrav's Stuff\\Coding\\React Projex\\cordion\\src\\pages\\Home\\components\\NoteViewer\\index.js",["77"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style/index.css\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Editor as NoteEditor,\r\n  EditorState,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n} from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\n\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Edit } from \"@material-ui/icons\";\r\n\r\nimport { db, auth } from \"../../../../firebase\";\r\nimport AuthDialog from \"../../../../components/AuthDialog\";\r\n\r\nfunction NoteViewer({ match }) {\r\n  const theirUID = match.params.uid,\r\n    cordionID = match.params.cordionID,\r\n    history = useHistory();\r\n  const [thisUser, setThisUser] = useState(\"\"),\r\n    [displayName, setDisplayName] = useState(\"\"),\r\n    [email, setEmail] = useState(\"\"),\r\n    [title, setTitle] = useState(\"\"),\r\n    [lastEdited, setLastEdited] = useState(\"\"),\r\n    [editorState, setEditorState] = useState(() => EditorState.createEmpty()),\r\n    [showAuthDialog, setShowAuthDialog] = useState(false);\r\n\r\n  const createCopy = () => {\r\n    console.log(\"Creating copy...\");\r\n    if (thisUser?.uid)\r\n      db.child(thisUser.uid)\r\n        .push({\r\n          title: title,\r\n          editorData: JSON.stringify(\r\n            convertToRaw(editorState.getCurrentContent())\r\n          ),\r\n          lastEdited: lastEdited,\r\n          user: {\r\n            displayName: thisUser.displayName,\r\n            uid: thisUser.uid,\r\n            photoURL: thisUser.photoURL,\r\n            email: thisUser.email,\r\n          },\r\n        })\r\n        .then((snap) => {\r\n          history.push(`/${snap.key}`);\r\n        });\r\n    else setShowAuthDialog(true);\r\n  };\r\n  // Live Preview\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((currentUser) => {\r\n      if (currentUser) setThisUser(currentUser);\r\n\r\n      db.child(theirUID)\r\n        .child(cordionID)\r\n        .on(\"value\", (snap) => {\r\n          if (snap?.val()?.user?.displayName)\r\n            setDisplayName(snap.val().user.displayName);\r\n          if (snap?.val()?.user?.email) setEmail(snap.val().user.email);\r\n          if (snap?.val()?.title) setTitle(snap.val().title);\r\n          if (snap?.val()?.lastEdited) setLastEdited(snap.val().lastEdited);\r\n          if (snap?.val()?.editorData)\r\n            setEditorState(\r\n              EditorState.createWithContent(\r\n                convertFromRaw(JSON.parse(snap.val().editorData))\r\n              )\r\n            );\r\n        });\r\n    });\r\n  }, [window.location.href]);\r\n\r\n  useEffect(() => {\r\n    document.title = `Cordion - ${title} (Viewing)`;\r\n  }, [title]);\r\n\r\n  // Init Editor\r\n  const styleMap = {\r\n    CODE: {\r\n      backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n      fontFamily: \"monospace\",\r\n      borderRadius: 4,\r\n    },\r\n    STRIKE: {\r\n      textDecoration: \"line-through\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"NoteViewer\">\r\n        <div className=\"file-title\">\r\n          <div className=\"display-title\">{title}</div>\r\n          <IconButton onClick={createCopy}>\r\n            <Edit />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"file-author-info\">\r\n          {displayName && (\r\n            <span className=\"file-author\">\r\n              Last Edited by{\" \"}\r\n              <a href={`mailto:${email}`} style={{ color: \"black\" }}>\r\n                <b>{displayName}</b>\r\n              </a>{\" \"}\r\n              at {lastEdited}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"file-editor\">\r\n          <NoteEditor\r\n            editorState={editorState}\r\n            onChange={setEditorState}\r\n            customStyleMap={styleMap}\r\n            readOnly={true}\r\n            placeholder=\"Type your notes in here...\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <AuthDialog open={showAuthDialog} setShowAuthDialog={setShowAuthDialog} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NoteViewer;\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":29,"column":6,"nodeType":"84","endLine":29,"endColumn":28,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":53,"column":6,"nodeType":"84","endLine":53,"endColumn":8,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":38,"nodeType":"90","messageId":"91","endLine":1,"endColumn":44},{"ruleId":"82","severity":1,"message":"92","line":62,"column":6,"nodeType":"84","endLine":62,"endColumn":47,"suggestions":"93"},{"ruleId":"82","severity":1,"message":"94","line":68,"column":6,"nodeType":"84","endLine":68,"endColumn":13,"suggestions":"95"},{"ruleId":"88","severity":1,"message":"96","line":20,"column":15,"nodeType":"90","messageId":"91","endLine":20,"endColumn":25},{"ruleId":"82","severity":1,"message":"97","line":65,"column":6,"nodeType":"84","endLine":65,"endColumn":8,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"99","line":69,"column":6,"nodeType":"84","endLine":69,"endColumn":20,"suggestions":"100"},{"ruleId":"88","severity":1,"message":"101","line":27,"column":3,"nodeType":"90","messageId":"91","endLine":27,"endColumn":20},{"ruleId":"88","severity":1,"message":"102","line":28,"column":3,"nodeType":"90","messageId":"91","endLine":28,"endColumn":18},{"ruleId":"88","severity":1,"message":"103","line":29,"column":3,"nodeType":"90","messageId":"91","endLine":29,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":101,"column":6,"nodeType":"84","endLine":101,"endColumn":28,"suggestions":"104"},{"ruleId":"82","severity":1,"message":"105","line":149,"column":6,"nodeType":"84","endLine":149,"endColumn":26,"suggestions":"106"},{"ruleId":"82","severity":1,"message":"107","line":10,"column":6,"nodeType":"84","endLine":10,"endColumn":28,"suggestions":"108"},{"ruleId":"82","severity":1,"message":"109","line":75,"column":6,"nodeType":"84","endLine":75,"endColumn":28,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.cordionID'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'setShowAuthDialog'. Either include it or remove the dependency array. If 'setShowAuthDialog' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["114"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history.location.pathname'. Either include it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["115"],"React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.",["116"],"'setDeleted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'path'. Either include them or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShow' needs the current value of 'title'.",["118"],"'FormatAlignCenter' is defined but never used.","'FormatAlignLeft' is defined but never used.","'FormatAlignRight' is defined but never used.",["119"],"React Hook useEffect has a missing dependency: 'match.params.cordionID'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has an unnecessary dependency: 'window.location.href'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["121"],"React Hook useEffect has missing dependencies: 'cordionID' and 'theirUID'. Either include them or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"123","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [match.params.cordionID]",{"range":"142","text":"143"},"Update the dependencies array to be: [setShowAuthDialog]",{"range":"144","text":"145"},"Update the dependencies array to be: [history.location.pathname]",{"range":"146","text":"147"},"Update the dependencies array to be: [notes, uid]",{"range":"148","text":"149"},"Update the dependencies array to be: [history, path]",{"range":"150","text":"151"},"Update the dependencies array to be: [searchFilter, title]",{"range":"152","text":"153"},{"range":"154","text":"143"},"Update the dependencies array to be: [title, editorState, match.params.cordionID]",{"range":"155","text":"156"},"Update the dependencies array to be: []",{"range":"157","text":"158"},"Update the dependencies array to be: [cordionID, theirUID]",{"range":"159","text":"160"},[1106,1128],"[match.params.cordionID]",[1407,1409],"[setShowAuthDialog]",[1929,1970],"[history.location.pathname]",[2089,2096],"[notes, uid]",[1947,1949],"[history, path]",[2053,2067],"[searchFilter, title]",[2662,2684],[3976,3996],"[title, editorState, match.params.cordionID]",[242,264],"[]",[2422,2444],"[cordionID, theirUID]"]